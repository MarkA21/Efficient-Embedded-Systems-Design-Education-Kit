; generated by Component: ARM Compiler 5.06 update 7 (build 960) Tool: ArmCC [4d365d]
; commandline ArmCC [--c99 --list --split_sections --debug -c --asm --interleave -o.\objects\system_stm32f4xx.o --asm_dir=.\Listings\ --list_dir=.\Listings\ --depend=.\objects\system_stm32f4xx.d --cpu=Cortex-M4.fp.sp --apcs=interwork -O3 --diag_suppress=9931 -I.\drivers -I.\RTE\_Target_1 -Ic:\Keil_v5\ARM\PACK\ARM\CMSIS\5.8.0\CMSIS\Core\Include -Ic:\Keil_v5\ARM\PACK\Keil\STM32F4xx_DFP\2.15.0\Drivers\CMSIS\Device\ST\STM32F4xx\Include -D__UVISION_VERSION=534 -D_RTE_ -DSTM32F401xE -D_RTE_ --omf_browse=.\objects\system_stm32f4xx.crf RTE\Device\STM32F401RETx\system_stm32f4xx.c]
                          THUMB

                          AREA ||i.SystemCoreClockUpdate||, CODE, READONLY, ALIGN=2

                  SystemCoreClockUpdate PROC
;;;204      */
;;;205    void SystemCoreClockUpdate(void)
000000  b570              PUSH     {r4-r6,lr}
;;;206    {
;;;207      uint32_t tmp = 0, pllvco = 0, pllp = 2, pllsource = 0, pllm = 2;
;;;208      
;;;209      /* Get SYSCLK source -------------------------------------------------------*/
;;;210      tmp = RCC->CFGR & RCC_CFGR_SWS;
000002  4c19              LDR      r4,|L1.104|
000004  6820              LDR      r0,[r4,#0]
;;;211    
;;;212      switch (tmp)
;;;213      {
;;;214        case 0x00:  /* HSI used as system clock source */
;;;215          SystemCoreClock = HSI_VALUE;
000006  4a19              LDR      r2,|L1.108|
000008  f010010c          ANDS     r1,r0,#0xc            ;210
00000c  4818              LDR      r0,|L1.112|
00000e  d004              BEQ      |L1.26|
;;;216          break;
;;;217        case 0x04:  /* HSE used as system clock source */
;;;218          SystemCoreClock = HSE_VALUE;
000010  4d18              LDR      r5,|L1.116|
000012  2904              CMP      r1,#4                 ;212
000014  d003              BEQ      |L1.30|
000016  2908              CMP      r1,#8                 ;212
000018  d003              BEQ      |L1.34|
                  |L1.26|
00001a  6002              STR      r2,[r0,#0]            ;216  ; SystemCoreClock
00001c  e01b              B        |L1.86|
                  |L1.30|
;;;219          break;
00001e  6005              STR      r5,[r0,#0]  ; SystemCoreClock
000020  e019              B        |L1.86|
                  |L1.34|
;;;220        case 0x08:  /* PLL used as system clock source */
;;;221    
;;;222          /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLL_M) * PLL_N
;;;223             SYSCLK = PLL_VCO / PLL_P
;;;224             */    
;;;225          pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) >> 22;
000022  4911              LDR      r1,|L1.104|
000024  1f09              SUBS     r1,r1,#4
000026  680b              LDR      r3,[r1,#0]
000028  f3c35680          UBFX     r6,r3,#22,#1
;;;226          pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
00002c  680b              LDR      r3,[r1,#0]
00002e  f003033f          AND      r3,r3,#0x3f
;;;227          
;;;228          if (pllsource != 0)
000032  b116              CBZ      r6,|L1.58|
;;;229          {
;;;230            /* HSE used as PLL clock source */
;;;231            pllvco = (HSE_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
000034  fbb5f2f3          UDIV     r2,r5,r3
000038  e001              B        |L1.62|
                  |L1.58|
;;;232          }
;;;233          else
;;;234          {
;;;235            /* HSI used as PLL clock source */
;;;236            pllvco = (HSI_VALUE / pllm) * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> 6);
00003a  fbb2f2f3          UDIV     r2,r2,r3
                  |L1.62|
00003e  680b              LDR      r3,[r1,#0]
;;;237          }
;;;238    
;;;239          pllp = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >>16) + 1 ) *2;
000040  6809              LDR      r1,[r1,#0]
000042  f3c31388          UBFX     r3,r3,#6,#9           ;236
000046  435a              MULS     r2,r3,r2              ;236
000048  f3c14101          UBFX     r1,r1,#16,#2
00004c  1c49              ADDS     r1,r1,#1
00004e  0049              LSLS     r1,r1,#1
;;;240          SystemCoreClock = pllvco/pllp;
000050  fbb2f1f1          UDIV     r1,r2,r1
000054  6001              STR      r1,[r0,#0]  ; SystemCoreClock
                  |L1.86|
;;;241          break;
;;;242        default:
;;;243          SystemCoreClock = HSI_VALUE;
;;;244          break;
;;;245      }
;;;246      /* Compute HCLK frequency --------------------------------------------------*/
;;;247      /* Get HCLK prescaler */
;;;248      tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> 4)];
000056  6821              LDR      r1,[r4,#0]
000058  4a07              LDR      r2,|L1.120|
00005a  f3c11103          UBFX     r1,r1,#4,#4
00005e  5c51              LDRB     r1,[r2,r1]
;;;249      /* HCLK frequency */
;;;250      SystemCoreClock >>= tmp;
000060  6802              LDR      r2,[r0,#0]  ; SystemCoreClock
000062  40ca              LSRS     r2,r2,r1
000064  6002              STR      r2,[r0,#0]  ; SystemCoreClock
;;;251    }
000066  bd70              POP      {r4-r6,pc}
;;;252    
                          ENDP

                  |L1.104|
                          DCD      0x40023808
                  |L1.108|
                          DCD      0x00f42400
                  |L1.112|
                          DCD      ||.data||
                  |L1.116|
                          DCD      0x017d7840
                  |L1.120|
                          DCD      ||.constdata||

                          AREA ||i.SystemInit||, CODE, READONLY, ALIGN=2

                  SystemInit PROC
;;;149      */
;;;150    void SystemInit(void)
000000  4805              LDR      r0,|L2.24|
;;;151    {
;;;152      /* FPU settings ------------------------------------------------------------*/
;;;153      #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
;;;154        SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
000002  6801              LDR      r1,[r0,#0]
000004  f4410170          ORR      r1,r1,#0xf00000
000008  6001              STR      r1,[r0,#0]
;;;155      #endif
;;;156    
;;;157    #if defined (DATA_IN_ExtSRAM) || defined (DATA_IN_ExtSDRAM)
;;;158      SystemInit_ExtMemCtl(); 
;;;159    #endif /* DATA_IN_ExtSRAM || DATA_IN_ExtSDRAM */
;;;160    
;;;161      /* Configure the Vector Table location add offset address ------------------*/
;;;162    #ifdef VECT_TAB_SRAM
;;;163      SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
;;;164    #else
;;;165      SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
00000a  4903              LDR      r1,|L2.24|
00000c  f04f6000          MOV      r0,#0x8000000
000010  3980              SUBS     r1,r1,#0x80
000012  6008              STR      r0,[r1,#0]
;;;166    #endif
;;;167    }
000014  4770              BX       lr
;;;168    
                          ENDP

000016  0000              DCW      0x0000
                  |L2.24|
                          DCD      0xe000ed88

                          AREA ||.constdata||, DATA, READONLY, ALIGN=0

                  AHBPrescTable
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  00000000          DCB      0x00,0x00,0x00,0x00
000008  01020304          DCB      0x01,0x02,0x03,0x04
00000c  06070809          DCB      0x06,0x07,0x08,0x09

                          AREA ||area_number.6||, DATA, READONLY, ALIGN=0

                          EXPORTAS ||area_number.6||, ||.constdata||
                  APBPrescTable
000000  00000000          DCB      0x00,0x00,0x00,0x00
000004  01020304          DCB      0x01,0x02,0x03,0x04

                          AREA ||.data||, DATA, ALIGN=2

                  SystemCoreClock
                          DCD      0x00f42400

;*** Start embedded assembler ***

#line 1 "RTE\\Device\\STM32F401RETx\\system_stm32f4xx.c"
	AREA ||.rev16_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f4xx_c_5d646a67____REV16|
#line 208 "c:\\Keil_v5\\ARM\\PACK\\ARM\\CMSIS\\5.8.0\\CMSIS\\Core\\Include\\cmsis_armcc.h"
|__asm___18_system_stm32f4xx_c_5d646a67____REV16| PROC
#line 209

 rev16 r0, r0
 bx lr
	ENDP
	AREA ||.revsh_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f4xx_c_5d646a67____REVSH|
#line 223
|__asm___18_system_stm32f4xx_c_5d646a67____REVSH| PROC
#line 224

 revsh r0, r0
 bx lr
	ENDP
	AREA ||.rrx_text||, CODE
	THUMB
	EXPORT |__asm___18_system_stm32f4xx_c_5d646a67____RRX|
#line 410
|__asm___18_system_stm32f4xx_c_5d646a67____RRX| PROC
#line 411

 rrx r0, r0
 bx lr
	ENDP

;*** End   embedded assembler ***
